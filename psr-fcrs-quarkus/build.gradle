plugins {
    id 'java'
    id 'groovy'
    id 'io.quarkus' version "${quarkusPluginVersion}"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://nexus.golf-noprod.js-devops.co.uk/nexus/content/repositories/js-java')
    }

    maven {
        url = uri('https://nexus.golf-noprod.js-devops.co.uk/nexus/content/repositories/central/')
    }
}

ext['spock.version'] = '1.3'

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'

    testImplementation 'io.quarkus:quarkus-junit5'

    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.3.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.3.2.RELEASE'
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.5.3'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.4'
    implementation 'org.springdoc:springdoc-openapi-ui:1.4.2'
    implementation 'org.springframework.boot:spring-boot-starter-activemq:2.3.2.RELEASE'
    implementation 'org.messaginghub:pooled-jms:1.1.1'
    implementation 'org.flywaydb:flyway-core:6.5.3'
    implementation 'org.springframework.data:spring-data-jpa:2.3.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.2.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.4.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-openfeign-core:2.2.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.3.2.RELEASE'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.12.0'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:4.12.0'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.3.2.RELEASE'
    runtimeOnly 'org.postgresql:postgresql:42.2.14'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.2.RELEASE'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation 'org.testcontainers:spock:1.14.3'
    testImplementation 'org.testcontainers:postgresql:1.14.3'
    testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.27.1'
    compileOnly 'com.newrelic.agent.java:newrelic-java:5.14.0'

     // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
}

group = 'com.sainsburys.psr.fcrs'
version = '0.0.53-SNAPSHOT'
description = 'psr-fcrs'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
